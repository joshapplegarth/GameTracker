// <auto-generated />
using System;
using GameTracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameTracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210513155151_Check")]
    partial class Check
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameTracker.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(7,1)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("GameTracker.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("GameTracker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "j.applegarth@Example.com",
                            Firstname = "Joshua",
                            IsAdmin = true,
                            Lastname = "Applegarth",
                            Password = "qazQAZ1!"
                        },
                        new
                        {
                            Id = 2,
                            Email = "c.mathews@Example.com",
                            Firstname = "Chris",
                            IsAdmin = false,
                            Lastname = "Mathews",
                            Password = "wsxWSX2@"
                        },
                        new
                        {
                            Id = 3,
                            Email = "w.walker@Example.com",
                            Firstname = "Wayne",
                            IsAdmin = false,
                            Lastname = "Walker",
                            Password = "edcEDC3#"
                        },
                        new
                        {
                            Id = 4,
                            Email = "s.aguirre@Example.com",
                            Firstname = "Sergio",
                            IsAdmin = false,
                            Lastname = "Aguirre",
                            Password = "rfvRFV4$"
                        },
                        new
                        {
                            Id = 5,
                            Email = "m.thompson@Example.com",
                            Firstname = "Micah",
                            IsAdmin = false,
                            Lastname = "Thompson",
                            Password = "tgbTGB5%"
                        });
                });

            modelBuilder.Entity("GameTracker.Models.Game", b =>
                {
                    b.HasOne("GameTracker.Models.Location", "Location")
                        .WithMany("Games")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("GameTracker.Models.Location", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
